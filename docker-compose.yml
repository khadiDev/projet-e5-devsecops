version: '3.8'

services:

  # Reverse Proxy Traefik
  reverse-proxy:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "8080:80"     # Web
      - "8081:8080"   # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - ecommerce
      - fastapi
      - flask
    networks:
      - web

  # App 1 - Django Stripe
  ecommerce:
    build: ./priv-rocket-ecommerce-main
    environment:
      - DJANGO_SETTINGS_MODULE=your_project.settings
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ecommerce.rule=Host(`stripe.localhost`)"
      - "traefik.http.services.ecommerce.loadbalancer.server.port=8000"
    networks:
      - web
      - db

  # App 2 - FastAPI
  fastapi:
    build: ./FastApi-Docker-main
    environment:
      - DB_HOST=fastapi-db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=Item-docker-api
    expose:
      - "8000"
    depends_on:
      - fastapi-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`api.localhost`)"
      - "traefik.http.services.fastapi.loadbalancer.server.port=8000"
    networks:
      - web
      - db

  # Base de données MySQL pour FastAPI
  fastapi-db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=Item-docker-api
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - db

  # App 3 - Flask
  flask:
    build: ./flask-datta-1752138310-main
    environment:
      - FLASK_ENV=development
    expose:
      - "5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flask.rule=Host(`flask.localhost`)"
      - "traefik.http.services.flask.loadbalancer.server.port=5000"
    networks:
      - web

  # App 4 - PHP vulnérable exposée directement
  php-app:
    build: ./ProjetDevOps-main
    ports:
      - "8082:80"  # Accessible directement
    networks:
      - web

volumes:
  mysql_data:

networks:
  web:
  db:
